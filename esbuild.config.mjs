import esbuild from "esbuild";
import process from "process";
import builtins from 'builtin-modules'
import {fileURLToPath} from 'url';
import path from 'path'
import fs from 'fs'
const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === 'production');


const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const OBSIDIAN_VAULT = "C:/Users/andre/Dropbox/__andrei/obsidian/GHG/.obsidian/plugins/";
const OBSIDIAN_VAULT2 = "C:/Users/andre/Dropbox/__andrei/obsidian/TestVault/.obsidian/plugins/";

let developmentPlugin = {
	name: 'developmentPlugin',
	setup(build) {
		const BUILD_DIR = __dirname + "/";
		const PLUGIN_DIR = OBSIDIAN_VAULT + "obsidian-anysocket-sync/";
		const PLUGIN_DIR2 = OBSIDIAN_VAULT2 + "obsidian-anysocket-sync/";
		build.onEnd(result => {
			console.log(`build ended with ${result.errors.length} errors`)

			if (!fs.existsSync(PLUGIN_DIR)){
				fs.mkdirSync(PLUGIN_DIR);
			}

			fs.copyFileSync(BUILD_DIR + "main.js", PLUGIN_DIR + "main.js");
			fs.copyFileSync(BUILD_DIR + "styles.css", PLUGIN_DIR + "styles.css");
			fs.copyFileSync(BUILD_DIR + "manifest.json", PLUGIN_DIR + "manifest.json");


			if (!fs.existsSync(PLUGIN_DIR2)){
				fs.mkdirSync(PLUGIN_DIR2);
			}
			fs.copyFileSync(BUILD_DIR + "main.js", PLUGIN_DIR2 + "main.js");
			fs.copyFileSync(BUILD_DIR + "styles.css", PLUGIN_DIR2 + "styles.css");
			fs.copyFileSync(BUILD_DIR + "manifest.json", PLUGIN_DIR2 + "manifest.json");
		});
	},
}

esbuild.build({
	banner: {
		js: banner,
	},
	entryPoints: ['src/main.ts'],
	bundle: true,
	external: [
		'obsidian',
		'electron',
		'@codemirror/autocomplete',
		'@codemirror/collab',
		'@codemirror/commands',
		'@codemirror/language',
		'@codemirror/lint',
		'@codemirror/search',
		'@codemirror/state',
		'@codemirror/view',
		'@lezer/common',
		'@lezer/highlight',
		'@lezer/lr',
		...builtins],
	format: 'cjs',
	watch: !prod,
	target: 'es2018',
	logLevel: "info",
	sourcemap: prod ? false : 'inline',
	treeShaking: true,
	outfile: 'main.js',
	plugins: [developmentPlugin],
}).catch(() => process.exit(1));
